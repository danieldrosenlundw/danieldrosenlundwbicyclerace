getwd()
#Let's get the abselute path to our workspace.
1+1
dir.create("scripts")
3+5
12/7
area_hectares <- 1.0
area_hectares
(area_hectares <- 1.0)
2.47*area_hectares
area_hectares <- 2.5
2.47*area_hectares
area_acres <- 2.47*area_hectares
area_hectares <- 50
area_hectares <- 2.5
length <- 666
width <- 69
area <- lenght*width
area <- length*width
round(3.141559)
round(3.14159)
round(3.14159,2)
help(round)
# help() for at få hjælp til hvordan en funktion bruges
hh_members <- c(3,7,10,6)
respondent_wall_type <- c("muddaub","burntbricks","sunbricks")
repsondent_wall_type
respondent_wall_type <- c("muddaub","burntbricks","sunbricks",)
respondent_wall_type <- c("muddaub","burntbricks","sunbricks")
repsondent_wall_type
length(hh_members)
class(hh_members)
str(hh_members)
repsondent_wall_type
hh_members <- c(hh_members, 4,5,6,7)
str(hhmembers)
str(hh_members)
possessions <- c("bicycle","radio","TV")
possessions <- c("mobile",possessions,"solar torch")
num_char <- c(1,2,3,"a")
num_logical <- c(1,2,3,TRUE)
char_logical <- c("a","b","c",True)
tricky <- c(1,2,3,4)
tricky <- c(1,2,3,"4")
respondent_wall_type
respondent_wall_type[2]
possessions[2:4]
possessions[c(4,1,4,1,3,2)]
rooms <- c(2,1,1,NA,4)
mean(rooms)
mean(rooms,na.rm=TRUE)
#find our missing values
romoms[!is.na(rooms)]
#find our missing values
rooms[!is.na(rooms)]
is.na(rooms)
which(is.na(rooms))
rooms[-4]
#above finding and removing arrors
rooms <- c(1,2,1,1,NA,3,1,3,2,1,1,8,3,1,NA,1)
median(rooms[!is.na(rooms)])
median(rooms,na.rm = TRUE)
rooms[-c(5,15)]
median(rooms[-c(5,15)])
read.csv("Data/SAFI_openrefine.csv")
interviews <- read.csv("Data/SAFI_openrefine.csv")
?read.table
interviews
dim(interviews)
nrow(interviews)
head(interviews)
head(interviews,2)
tail(interviews,2)
names(interviews)
str(interviews)
interviews <- read.csv("Data/SAFI_openrefine.csv",stringsAsFactors = FALSE)
str(interviews)
interviews[50,]
interviews[50,1:2]
interviews[50,5]
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
library(tidyverse)
interview<-read.csv("data/SAFI-clean.csv")
interview<-read.csv("data/SAFI-clean.csv", na = "NULL")
interview <-read.csv("data/SAFI-clean.csv", na = "NULL")
interview <- read.csv("data/SAFI-clean.csv", na = "NULL")
interviews <- read.csv("data/SAFI-clean.csv", na = "NULL")
interviews <- read.csv("data/SAFI_clean.csv", na = "NULL")
View(interviews)
View(interviews)
view(interviewa)
view(interviews)
interviews <- read_csv("data/SAFI_clean.csv", na = "NULL")
view(interviews)
view(interviews)
head(interviews)
dim(interviews)
#Most common dplyr funktions
interviews[ ,3:4]
select(interviews, village, no_members, years_liv)
select(interviews, village, no_membrs, years_liv)
filter(interviews, village=="God")
#pipes
interviews2 <- filter(interviews, village=="God")
interviews_God <- select(interviews2, no_membrs, years_liv)
interviews_God
interviews %>%
interviews %>%
filter(village=="God") %>%
interviews %>%
filter(village=="God") %>%
select(no_membrs, years_liv)
interviews %>%
filter(village=="God") %>%
select(no_membrs, years_liv)
# creat an object via pipe
interviews_god2 <- interviews %>%
filter(village=="God") %>%
select(no_membrs, years_liv)
View(interviews_god2)
View(interviews_God)
View(interviews2)
View(interviews_god2)
interviews_god2
interviews %>%
filter(memb_assoc) %>%
select(affect_conflicts, liv_count, no_meals)
interviews %>%
filter(memb_assoc) %>%
select(affect_conflicts, liv_count, no_meals)
View(interviews)
interviews %>%
filter(memb_assoc=="yes") %>%
select(affect_conflicts, liv_count, no_meals)
interviews_new <- interviews %>%
filter(memb_assoc=="yes") %>%
select(affect_conflicts, liv_count, no_meals)
# Mutate
interviews %>%
mutate(people-per-room = no_membrs / rooms)
# Mutate
interviews %>%
mutate(people-per-room = no_membrs / rooms) %>%
pull()
# Mutate
interviews %>%
mutate(people-per-room = no_membrs / rooms ) %>%
pull()
# Mutate I need to creat a colum with ration of houshold members to rooms used for sleeping
interviews %>%
mutate(people_per_room = no_membrs / rooms ) %>%
pull()
interviews %>%
filter(!is.na(memb_assoc)) %>%
mutate(people_per_room = no_membrs / rooms ) %>%
pull ()
room_ratio <- interviews %>%
filter(!is.na(memb_assoc)) %>%
mutate(people_per_room = no_membrs / rooms ) %>%
pull ()
view(room_ratio)
interviews %>%
mutate(total_meals=no_meals*no_meals) %>%
filter(total_meals>20) %>%
select(village, total_meals)
meals <- interviews %>%
mutate(total_meals=no_meals*no_meals) %>%
filter(total_meals>20) %>%
select(village, total_meals)
View(meals)
meals <- interviews %>%
mutate(total_meals = no_meals*no_meals) %>%
filter(total_meals>20) %>%
select(village, total_meals)
interviews %>%
group_by(village) %>%
summarize(mean_no_members = mean(no_membrs))
view(room_ratio)
write_csv(room_ratio, path = "Data_Output/room_ratio.csv")
